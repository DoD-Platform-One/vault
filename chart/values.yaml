domain: dev.bigbang.mil
monitoring:
  enabled: false
  namespace: monitoring
networkPolicies:
  enabled: false
  # For vault-agent-injector egress to Kube-API
  controlPlaneCidr: 0.0.0.0/0
  # For Vault pod egress to VPC DNS & Endpoints, please review ../docs/bigbang-kms-auto-unseal.md
  vpcCidr: 0.0.0.0/0
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  # Additional network policies
  # ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  additionalPolicies: []

# BigBang autoInit Job
# For development or demo purposes only
# Should not be used for operational environments
# The root token and unlock keys should not be discoverable from a k8s secret
autoInit:
  enabled: true
  image:
    repository: registry1.dso.mil/ironbank/big-bang/base
    tag: 2.1.0
  # Init Job PVC Storage Size
  storage:
    size: 2Gi

istio:
  # Toggle istio interaction
  enabled: false
  hardened:
    enabled: false
    customAuthorizationPolicies: []
    # - name: "allow-nothing"
    #   enabled: true
    #   spec: {}
    # - name: allow-egress-instance-metadata
    #   enabled: true
    #   spec:
    #     action: ALLOW
    #     rules:
    #     - from:
    #       - source:
    #           ipBlocks:
    #             - 169.254.169.254/32
    monitoring:
      enabled: true
      namespaces:
        - monitoring
      principals:
        - cluster.local/ns/monitoring/sa/monitoring-grafana
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-alertmanager
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-operator
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-prometheus
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-kube-state-metrics
        - cluster.local/ns/monitoring/sa/monitoring-monitoring-prometheus-node-exporter
    apiAccess:
      enabled: true
      ports:
        - "8200"
  vault:
    enabled: true
    gateways:
    -  istio-system/main
    hosts:
    -  vault.{{ .Values.domain }}
    tls:
      # for passthrough tls
      cert: ""
      key: ""
  mtls:
    # STRICT = Allow only mutual TLS traffic
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT

minio:
  enabled: false
  # disableSSL: false
  # endpoint: minio.minio.svc.cluster.local
  # accessKey: ""
  # secretKey: ""
  # bucketName: vault-data

# Label to determine what workloads (pods/deployments) should be allowed by the custom-app-ingress-selector
customAppIngressSelector:
  key: vault-ingress
  value: true


bbtests:
  enabled: false
  cypress:
    resources:
      requests:
        cpu: 2
        memory: "8Gi"
      limits:
        cpu: 2
        memory: "8Gi"
    artifacts: true
    envs:
      cypress_vault_url: "http://vault.vault.svc:8200"
    secretEnvs:
      - name: cypress_token
        valueFrom:
          secretKeyRef:
            name: vault-token
            key: key
    disableDefaultTests: false

  scripts:
    permissions:
      apiGroups:
        - ""
      resources:
        - configmaps
      verbs:
        - create
        - delete
        - list
        - get
    image: registry1.dso.mil/ironbank/big-bang/base:2.1.0
    envs:
      VAULT_PORT: '80'
      VAULT_HOST: 'http://vault'
    secretEnvs:
      - name: vault_token
        valueFrom:
          secretKeyRef:
            name: vault-token
            key: key

openshift: false 

upstream:
  fullnameOverride: "vault-vault"
  nameOverride: "vault"
  
  global:
    imagePullSecrets:
      - name: private-registry

  injector:
    enabled: false

    leaderElector:
      enabled: false

    # If true, will enable a node exporter metrics endpoint at /metrics.
    metrics:
      enabled: true

    image:
      repository: "registry1.dso.mil/ironbank/hashicorp/vault/vault-k8s"
      tag: "v1.7.0"

    agentImage:
      repository: "registry1.dso.mil/ironbank/hashicorp/vault"
      tag: "1.20.0"

    agentDefaults:
      memLimit: "250Mi"
      memRequest: "250Mi"

    securityContext:
      container:
        capabilities:
          drop:
            - ALL

    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

  server:
    enabled: true

    image:
      repository: "registry1.dso.mil/ironbank/hashicorp/vault"
      tag: "1.20.0"

    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

    auditStorage:
      enabled: true

    ha:
      enabled: true
      replicas: 1

      apiAddr: "https://vault.dev.bigbang.mil"

      raft:
        enabled: true
        setNodeId: true

    statefulSet:
      securityContext:
        container:
          capabilities:
            drop:
              - ALL

  ui:
    enabled: true

  csi:
    image:
      repository: "registry1.dso.mil/ironbank/hashicorp/vault-csi-provider"
      tag: "v1.5.0"

    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 50m
        memory: 128Mi

    daemonSet:
      securityContext: 
        pod: 
          runAsNonRoot: true
          runAsGroup: 1000
          runAsUser: 100
          fsGroup: 1000  

    agent:
      image:
        repository: "registry1.dso.mil/ironbank/hashicorp/vault"
        tag: "1.20.0"

      resources:
        requests:
          memory: 256Mi
          cpu: 250m
        limits:
          memory: 256Mi
          cpu: 250m
