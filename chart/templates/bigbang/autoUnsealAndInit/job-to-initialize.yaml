{{- if and .Values.autoInit.enabled .Release.IsInstall }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ template "vault.fullname" . }}-root-token-secret
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}-root-token-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
- apiGroups:
  - ""
  - "authentication.k8s.io"
  resources:
  - serviceaccounts/token
  - secrets
  - tokenreviews
  verbs:
  - create
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ template "vault.fullname" . }}-root-token-secret
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}-root-token-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ template "vault.fullname" . }}-root-token-secret
subjects:
- kind: ServiceAccount
  name: {{ template "vault.fullname" . }}-root-token-secret
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "vault.fullname" . }}-root-token-secret
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}-root-token-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "vault.fullname" . }}-job-init
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: {{ template "vault.fullname" . }}-job-init
      annotations:
        sidecar.istio.io/inject: 'false'
      labels:
        app.kubernetes.io/name:  {{ include "vault.name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      {{- include "imagePullSecrets" . | nindent 6 }}
      {{- if not .Values.global.openshift }}
      securityContext:
        runAsNonRoot: true
        runAsGroup: {{ .Values.server.gid | default 1000 }}
        runAsUser: {{ .Values.server.uid | default 100 }}
        fsGroup: {{ .Values.server.gid | default 1000 }}
      {{- end }}
      containers:
      - name: bigbang-base-secret-creation
        image:  {{ .Values.autoInit.image.repository }}:{{ .Values.autoInit.image.tag }}
        command:
          - /bin/bash
          - -c
          - |
            kubectl create secret generic vault-token --from-file=key=/export/key --from-file=init.out=/export/init.out
        securityContext:
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: vault-keys
          mountPath: "/vault/data"
        - name: vault-data
          mountPath: "/vault/data/init"
        - name: vault-tmp
          mountPath: "/export"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 100m
            memory: 256Mi
      initContainers:
      - name: vault-init-job
        image:  {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
        command: ['/bin/sh', '-c', 'sleep 1200 && cd /vault/data/init && sh init.sh' ]
        volumeMounts:
        - name: vault-keys
          mountPath: "/vault/data"
        - name: vault-data
          mountPath: "/vault/data/init"
        - name: vault-tmp
          mountPath: "/export"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 100m
            memory: 256Mi
        securityContext:
          capabilities:
            drop:
            - ALL
      restartPolicy: OnFailure
      serviceAccount: {{ template "vault.fullname" . }}-root-token-secret
      volumes:
      - name: vault-keys
        persistentVolumeClaim:
          claimName: {{ template "vault.fullname" . }}-token-claim
      - name: vault-data
        configMap:
          name: vault-init-cm
      - name: vault-tmp
        emptyDir: {}
  backoffLimit: 10
  activeDeadlineSeconds: 360
  {{- end }}
